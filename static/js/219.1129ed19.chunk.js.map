{"version":3,"file":"static/js/219.1129ed19.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'beab6c0b252705afa5f8cc6b5b3c7d57';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  };\n  \n  export const getMovieByQuery = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n  };\n  \n  export const getMovieById = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  };\n  \n  export const getCastMovie = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  };","import styled from \"styled-components\";\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\nexport const ListItem = styled.li`\n  min-width: 182px;\n  font-size: 14px;\n  padding: 6px;\n  max-width: min-content;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  img {\n    max-width: 182px;\n  }\n  span {\n    color: #780a0f;\n  }\n`;","import { getCastMovie } from \"api\";\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport toast, {Toaster} from \"react-hot-toast\";\nimport { StyledList, ListItem } from \"./Cast.styled\";\n\nexport default function Cast() {\n    const [actors, setActors] = useState([]);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchCast = async() => {\n            try {\n                const response = await getCastMovie(movieId);\n                setActors(response);\n            } catch (error) {\n                toast.error('Cast not found');\n                setActors([]);\n            }\n        }\n        fetchCast();\n    }, [movieId]);\n\n    return(\n        <div>\n            <StyledList>\n                {actors.map(({id, profile_path, original_name, character}) => (\n                    <ListItem key={id}>\n                        <img src={`${profile_path ?\n                        'https://image.tmdb.org/t/p/w500/'+ profile_path : \n                        'https://via.placeholder.com/182x273?text=' + original_name}`}\n                        alt={original_name}/>\n                        <p>\n                        <span>Actor:</span> {original_name}\n                        </p>\n                        <p>\n                        <span>Character:</span> {character}\n                        </p>\n                    </ListItem>\n                ))}\n            </StyledList>\n            <Toaster/>\n        </div>\n    )\n}"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","getMovieByQuery","_ref2","_callee2","query","_context2","_x","getMovieById","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","cast","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","StyledList","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","Cast","_useState","useState","_useState2","_slicedToArray","actors","setActors","useParams","useEffect","fetchCast","t0","toast","_jsxs","children","_jsx","map","id","profile_path","original_name","character","src","alt","Toaster"],"sourceRoot":""}