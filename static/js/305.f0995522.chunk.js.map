{"version":3,"file":"static/js/305.f0995522.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'beab6c0b252705afa5f8cc6b5b3c7d57';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  };\n  \n  export const getMovieByQuery = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n  };\n  \n  export const getMovieById = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  };\n  \n  export const getCastMovie = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  };","import { getMovieById } from \"api\";\nimport { useEffect, useState } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Suspense } from \"react\";\n\nexport default function MovieDetailsPage() {\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const {movieId} = useParams();\n\n    const backLink = location.state?.from ?? '/movies';\n\n    useEffect(() => {\n        const fetchMovie = async() => {\n            try {\n                const data = await getMovieById(movieId);\n                setMovie(data);\n            } catch (error) {\n                toast.error('Something went wrong')\n            }\n        }\n        fetchMovie();\n    }, [movieId])\n\n    return (\n        <div>\n            <Link to={backLink}>Go back!</Link>\n            {movie && (<div>\n                <img src={`${movie.poster_path ?\n                        'https://image.tmdb.org/t/p/w500/'+ movie.poster_path : \n                        'https://via.placeholder.com/182x273?text=' + movie.original_title}`}\n                        alt={movie.original_title}/>\n                <div>\n                    <h2>{movie.original_title}</h2>\n                    <h4>User score: {Math.round(movie.vote_average)*10}%</h4>\n                    <h4>Overview</h4>\n                    <p>{movie.overview}</p>\n                    <h4>Genres</h4>\n                    <ul>{movie.genres?.map(genre => (\n                        <li key={genre.id}>\n                            {genre.name}\n                        </li>\n                    ))}</ul>\n                </div>\n            </div>\n            )}\n            \n                <div>\n                <h3>Additional information</h3>\n                <ul>\n                    <li>\n                        <Link to=\"cast\" state={location.state}>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\" state={location.state}>Reviews</Link>\n                    </li>\n                </ul>\n                <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n                </Suspense>\n            </div>\n            <Toaster/>\n        </div>\n    )\n}"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","getMovieByQuery","_ref2","_callee2","query","_context2","_x","getMovieById","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","cast","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","MovieDetailsPage","_location$state$from","_location$state","_movie$genres","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","useParams","backLink","state","from","useEffect","fetchMovie","t0","toast","_jsxs","children","_jsx","Link","to","src","poster_path","original_title","alt","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Outlet","Toaster"],"sourceRoot":""}