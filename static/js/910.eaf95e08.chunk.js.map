{"version":3,"file":"static/js/910.eaf95e08.chunk.js","mappings":"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","sources":["api.js","components/Cast.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'beab6c0b252705afa5f8cc6b5b3c7d57';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.result;\n  };\n  \n  export const getMovieByQuery = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data.result;\n  };\n  \n  export const getMovieById = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  };\n  \n  export const getCastMovie = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.result;\n  };","import { getCastMovie } from \"api\";\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport toast, {Toaster} from \"react-hot-toast\";\n\nexport const Cast = () => {\n    const [actors, setActors] = useState([]);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchCast = async() => {\n            try {\n                const response = await getCastMovie(movieId);\n                setActors(response);\n            } catch (error) {\n                toast.error('Cast not found')\n            }\n        }\n        fetchCast();\n    }, [movieId]);\n\n    return(\n        <div>\n            <ul>\n                {actors.map(({id, profile_path, original_name, character}) => (\n                    <li key={id}>\n                        <img src={`${profile_path ?\n                        'https://image.tmdb.org/t/p/w500/'+ profile_path : \n                        'https://via.placeholder.com/182x273?text=' + original_name}`}\n                        alt={original_name}/>\n                        <p>Actor: {original_name}</p>\n                        <p>Character: {character}</p>\n                    </li>\n                ))}\n            </ul>\n            <Toaster/>\n        </div>\n    )\n}"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","result","stop","apply","arguments","getMovieByQuery","_ref2","_callee2","query","_context2","_x","getMovieById","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","cast","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","Cast","_useState","useState","_useState2","_slicedToArray","actors","setActors","useParams","useEffect","fetchCast","t0","toast","_jsxs","children","_jsx","map","id","profile_path","original_name","character","src","alt","Toaster"],"sourceRoot":""}